#!/bin/bash
reset_previous_installation() {
    echo "ðŸ§¹ Limpiando instalaciones previas..."
    sudo docker rm -f n8n 2>/dev/null
    sudo rm -rf /etc/nginx/sites-{available,enabled}/n8n 2>/dev/null
    sudo certbot delete --noninteractive --cert-name "$DOMAIN" 2>/dev/null
    sudo rm -rf /tmp/n8n-auto-install ~/.n8n 2>/dev/null
    echo "âœ… Limpieza completada"
}
# Solicitar datos
echo -e "\e[32mIngresa el subdominio completo (ej: n8n.tudominio.com): \e[0m"
read DOMAIN
echo -e "\e[32mIngresa tu email para Let's Encrypt: \e[0m"
read EMAIL

# Validar email
while [[ ! "$EMAIL" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; do
    echo -e "\e[31mEmail invÃ¡lido. Ingresa un email vÃ¡lido:\e[0m"
    read EMAIL
done

# ConfiguraciÃ³n
N8N_PORT=5678
SCRIPT_DIR="/tmp/n8n-auto-install"

# Instalar dependencias
sudo apt update && sudo apt install -y curl git docker.io nginx certbot python3-certbot-nginx

# Configurar Docker
sudo systemctl start docker
sudo systemctl enable docker
sudo usermod -aG docker $USER

# Preparar entorno con permisos adecuados
sudo mkdir -p $SCRIPT_DIR
sudo chown $USER:$USER $SCRIPT_DIR  # Cambiar dueÃ±o del directorio
cd $SCRIPT_DIR

# Descargar plantillas con permisos correctos
curl -sO https://raw.githubusercontent.com/n8n-io/n8n/main/docker-compose.yml
curl -s https://raw.githubusercontent.com/n8n-io/n8n/main/.env.example | tee .env >/dev/null

# Verificar existencia de archivos
if [ ! -f "docker-compose.yml" ] || [ ! -f ".env" ]; then
    echo -e "\e[31mError: Fallo al descargar archivos de configuraciÃ³n\e[0m"
    exit 1
fi

# Configurar variables de entorno
sed -i "s/N8N_HOST=localhost/N8N_HOST=$DOMAIN/" .env
sed -i "s/WEBHOOK_URL=/WEBHOOK_URL=https:\/\/$DOMAIN\//" .env
sed -i "s#~/.n8n#/root/.n8n#" docker-compose.yml

# Iniciar contenedor
sudo docker-compose up -d

# Configurar Nginx
sudo tee /etc/nginx/sites-available/n8n >/dev/null <<EOF
server {
    listen 80;
    server_name $DOMAIN;

    location / {
        proxy_pass http://localhost:$N8N_PORT;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'Upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF

# Habilitar sitio
sudo ln -sf /etc/nginx/sites-available/n8n /etc/nginx/sites-enabled/
sudo nginx -t && sudo systemctl restart nginx

# Obtener SSL
sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos --email $EMAIL --redirect

# Limpiar
sudo rm -rf $SCRIPT_DIR
echo -e "\nâœ… InstalaciÃ³n completada! Accede en: \e[1mhttps://$DOMAIN\e[0m"
